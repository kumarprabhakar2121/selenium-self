{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-12T16:55:47.538Z",
    "end": "2022-08-12T16:56:11.818Z",
    "duration": 24280,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d332b061-e73f-4908-b6f8-7ecc5ccf45c7",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cf5bb6ef-ef30-4f22-8223-ab910b3abd5e",
          "title": "Add new todo ",
          "fullFile": "/home/prabhakar/Coding/testing/lambda-test-YT/test/firstTest.js",
          "file": "/test/firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully add a new todo",
              "fullTitle": "Add new todo  successfully add a new todo",
              "timedOut": null,
              "duration": 1268,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var driver = new Builder().forBrowser(\"chrome\").build();\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\ndriver.sleep(2000);\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"buy milk\", Key.RETURN);\ndriver.sleep(2000);\n//assert\n// const testFromTest = await driver\n//   .findElement(By.xpath(\"//li[last()]\"))\n//   .getText()\n//   .then((value) => {\n//     return value;\n//   });\n//node assert\n// await assert.strictEqual(testFromTest, \"buy milk\");\n//chai assert\n// testFromTest.should.equal(\"cookie and milk\");\nawait driver.quit();",
              "err": {},
              "uuid": "58b9ca23-b927-41ca-9693-93cf2b4c8cde",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58b9ca23-b927-41ca-9693-93cf2b4c8cde"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1268,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "fd98e92d-ba93-428a-8355-80cf99ffab2f",
          "title": "Add another new todo ",
          "fullFile": "/home/prabhakar/Coding/testing/lambda-test-YT/test/secondTest.js",
          "file": "/test/secondTest.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Add another new todo \"",
              "fullTitle": "Add another new todo  \"before each\" hook in \"Add another new todo \"",
              "timedOut": null,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = new Builder()\n  .usingServer(gridUrl)\n  .withCapabilities(capabilities)\n  .build();\n// driver = new Builder().forBrowser(\"chrome\").build();",
              "err": {},
              "uuid": "7c25d3ff-9f01-403c-8bbe-be8c8aed6a73",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Add another new todo \"",
              "fullTitle": "Add another new todo  \"after each\" hook in \"Add another new todo \"",
              "timedOut": null,
              "duration": 735,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "0ad16ac6-fdf1-4da3-b279-d2231a8a5865",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "successfully add another new todo",
              "fullTitle": "Add another new todo  successfully add another new todo",
              "timedOut": null,
              "duration": 11027,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"buy milk\", Key.RETURN);\nconst testFromTest = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then((value) => {\n    return value;\n  });\n//chai assert\ntestFromTest.should.equal(\"buy milk\");",
              "err": {},
              "uuid": "f9b106ef-aa7d-4a84-9d24-416e11f99323",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "adding a new test for reposting",
              "fullTitle": "Add another new todo  adding a new test for reposting",
              "timedOut": null,
              "duration": 11632,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"buy cookie\", Key.RETURN);\nconst testFromTest = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then((value) => {\n    return value;\n  });\n//chai assert\ntestFromTest.should.equal(\"buy cookie\");",
              "err": {},
              "uuid": "227ac8b6-4929-4318-bd53-af1781329313",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9b106ef-aa7d-4a84-9d24-416e11f99323",
            "227ac8b6-4929-4318-bd53-af1781329313"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22659,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "/home/prabhakar/Coding/testing/lambda-test-YT/testReports",
        "reportFilename": "testResults"
      },
      "version": "6.2.0"
    }
  }
}